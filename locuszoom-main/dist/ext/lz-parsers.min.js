/*! Locuszoom 0.14.0 */
var LzParsers;(()=>{"use strict";var e={d:(r,t)=>{for(var l in t)e.o(t,l)&&!e.o(r,l)&&Object.defineProperty(r,l,{enumerable:!0,get:t[l]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r)},r={};e.d(r,{default:()=>d});const t=new Set(["",".","NA","N/A","n/a","nan","-nan","NaN","-NaN","null","NULL","None",null]),l=/([\d.-]+)([\sxeE]*)([0-9-]*)/;function n(e){return Number.isInteger(e)}function o(e,r=t,l=null){return e.map((e=>r.has(e)?l:e))}function a(e){return e.replace(/^chr/g,"").toUpperCase()}function s(e,r=!1){if(null===e)return e;const t=+e;if(r)return t;if(t<0||t>1)throw new Error("p value is not in the allowed range");if(0===t){if("0"===e)return 1/0;let[,r,,t]=e.match(l);return r=+r,t=""!==t?+t:0,0===r?1/0:-(Math.log10(+r)+ +t)}return-Math.log10(t)}function u(e){return null==e||"."===e?null:e}function i(e){return(e=u(e))?+e:null}const c=/^(?:chr)?([a-zA-Z0-9]+?)[_:-](\d+)[_:|-]?(\w+)?[/_:|-]?([^_]+)?_?(.*)?/;function f(e,r=!1){const t=e&&e.match(c);if(t)return t.slice(1);if(r)return null;throw new Error(`Could not understand marker format for ${e}. Should be of format chr:pos or chr:pos_ref/alt`)}function p(e){const r=f(e);if(!r)throw new Error(`Unable to normalize marker format for variant: ${e}`);const[t,l,n,o]=r;let a=`${t}:${l}`;return n&&o&&(a+=`_${n}/${o}`),a}function _(e,r){const t=Array(r.length+1).fill(null).map((()=>Array(e.length+1).fill(null)));for(let r=0;r<=e.length;r+=1)t[0][r]=r;for(let e=0;e<=r.length;e+=1)t[e][0]=e;for(let l=1;l<=r.length;l+=1)for(let n=1;n<=e.length;n+=1){const o=e[n-1]===r[l-1]?0:1;t[l][n]=Math.min(t[l][n-1]+1,t[l-1][n]+1,t[l-1][n-1]+o)}return t[r.length][e.length]}function m(e,r,t=2){let l=t+1,n=null;for(let t=0;t<r.length;t++){const o=r[t];if(null===o)continue;const a=Math.min(...e.map((e=>_(o,e))));a<l&&(l=a,n=t)}return n}function h(e){if(e.Adapters.has("TabixUrlSource")){const r=e.Adapters.get("TabixUrlSource"),t=e.Adapters.get("LDServer");class l extends r{constructor(e){e.limit_fields||(e.limit_fields=["variant2","position2","correlation"]),super(e)}_buildRequestOptions(e,r){if(!r)throw new Error("LD request must depend on association data");const l=super._buildRequestOptions(...arguments);return r.length?(l.ld_refvar=t.prototype.__find_ld_refvar(e,r),l):(l._skip_request=!0,l)}_performRequest(e){return e._skip_request?Promise.resolve([]):super._performRequest(e)}_annotateRecords(e,r){return e.filter((e=>e.variant1===r.ld_refvar))}}e.Adapters.add("UserTabixLD",l)}}"undefined"!=typeof LocusZoom&&LocusZoom.use(h);const d={install:h,makeBed12Parser:function({normalize:e=!0}={}){return r=>{const t=r.trim().split("\t");let[l,n,o,s,c,f,p,_,m,h,d,v]=t;if(!(l&&n&&o))throw new Error("Sample data must provide all required BED columns");if(f=u(f),e&&(l=a(l),n=+n+1,o=+o,c=i(c),p=i(p),_=i(_),m=u(m),h=i(h),d=u(d),d=d?d.replace(/,$/,"").split(",").map((e=>+e)):null,v=u(v),v=v?v.replace(/,$/,"").split(",").map((e=>+e+1)):null,d&&v&&h&&(d.length!==h||v.length!==h)))throw new Error("Block size and start information should provide the same number of items as in blockCount");return{chrom:l,chromStart:n,chromEnd:o,name:s,score:c,strand:f,thickStart:p,thickEnd:_,itemRgb:m,blockCount:h,blockSizes:d,blockStarts:v}}},makeGWASParser:function({marker_col:e,chrom_col:r,pos_col:l,ref_col:o,alt_col:u,pvalue_col:i,is_neg_log_pvalue:c=!1,rsid_col:p,beta_col:_,stderr_beta_col:m,allele_freq_col:h,allele_count_col:d,n_samples_col:v,is_alt_effect:g=!0,delimiter:w="\t"}){if(n(e)&&n(r)&&n(l))throw new Error("Must specify either marker OR chr + pos");if(!(n(e)||n(r)&&n(l)))throw new Error("Must specify how to locate marker");if(n(d)&&n(h))throw new Error("Allele count and frequency options are mutually exclusive");if(n(d)&&!n(v))throw new Error("To calculate allele frequency from counts, you must also provide n_samples");return b=>{const k=b.split(w);let y,E,q,A,N,$,S,L=null,z=null,P=null,C=null;if(n(e))[y,E,q,A]=f(k[e-1],!1);else{if(!n(r)||!n(l))throw new Error("Must specify all fields required to identify the variant");y=k[r-1],E=k[l-1]}if(y=a(y),y.startsWith("RS"))throw new Error(`Invalid chromosome specified: value "${y}" is an rsID`);n(o)&&(q=k[o-1]),n(u)&&(A=k[u-1]),n(p)&&(L=k[p-1]),t.has(q)&&(q=null),t.has(A)&&(A=null),t.has(L)?L=null:L&&(L=L.toLowerCase(),L.startsWith("rs")||(L=`rs${L}`));const O=s(k[i-1],c);q=q||null,A=A||null,n(h)&&(N=k[h-1]),n(d)&&($=k[d-1],S=k[v-1]),n(_)&&(z=k[_-1],z=t.has(z)?null:+z),n(m)&&(P=k[m-1],P=t.has(P)?null:+P),(h||d)&&(C=function({freq:e,allele_count:r,n_samples:l,is_alt_effect:n=!0}){if(void 0!==e&&void 0!==r)throw new Error("Frequency and allele count options are mutually exclusive");let o;if(void 0===e&&(t.has(r)||t.has(l)))return null;if(void 0===e&&void 0!==r)o=+r/+l/2;else{if(t.has(e))return null;o=+e}if(o<0||o>1)throw new Error("Allele frequency is not in the allowed range");return n?o:1-o}({freq:N,allele_count:$,n_samples:S,is_alt_effect:g}));const R=q&&A?`_${q}/${A}`:"";return{chromosome:y,position:+E,ref_allele:q?q.toUpperCase():null,alt_allele:A?A.toUpperCase():null,variant:`${y}:${E}${R}`,rsid:L,log_pvalue:O,beta:z,stderr_beta:P,alt_allele_freq:C}}},guessGWAS:function(e,r,t=1){const l=e.map((e=>e?e.toLowerCase():e));l[0].replace("/^#+/","");const n=function(e,r){let t;const l=(e,r,l)=>{const n=o(r.map((r=>r[e])));try{t=n.map((e=>s(e,l)))}catch(e){return!1}return t.every((e=>!Number.isNaN(e)))},n=m(["neg_log_pvalue","log_pvalue","log_pval","logpvalue"],e),a=m(["pvalue","p.value","p-value","pval","p_score","p","p_value"],e);return null!==n&&l(n,r,!0)?{pvalue_col:n+1,is_neg_log_pvalue:!0}:a&&l(a,r,!1)?{pvalue_col:a+1,is_neg_log_pvalue:!1}:null}(l,r);if(!n)return null;l[n.pvalue_col-1]=null;const a=function(e,r){const t=r[0];let l=m(["snpid","marker","markerid","snpmarker","chr:position"],e);if(null!==l&&f(t[l],!0))return l+=1,{marker_col:l};const n=e.slice(),o=[["chrom_col",["chrom","chr","chromosome"],!0],["pos_col",["position","pos","begin","beg","bp","end","ps","base_pair_location"],!0],["ref_col",["A1","ref","reference","allele0","allele1"],!1],["alt_col",["A2","alt","alternate","allele1","allele2"],!1]],a={};for(let e=0;e<o.length;e++){const[r,t,l]=o[e],s=m(t,n);if(null===s&&l)return null;null!==s&&(a[r]=s+1,n[s]=null)}return a}(l,r);if(!a)return null;Object.keys(a).forEach((e=>{l[a[e]]=null}));const u=function(e,r){function t(e,r){const t=o(r.map((r=>r[e])));let l;try{l=t.filter((e=>null!==e)).map((e=>+e))}catch(e){return!1}return l.every((e=>!Number.isNaN(e)))}const l=m(["beta","effect_size","alt_effsize","effect"],e,0),n=m(["stderr_beta","stderr","sebeta","effect_size_sd","se","standard_error"],e,0),a={};return null!==l&&t(l,r)&&(a.beta_col=l+1),null!==n&&t(n,r)&&(a.stderr_beta_col=n+1),a}(l,r);return n&&a?Object.assign({},n,a,u||{}):null},makePlinkLdParser:function({normalize:e=!0}={}){return r=>{let[t,l,n,o,s,u,i]=r.trim().split("\t");return e&&(t=a(t),o=a(o),n=p(n),u=p(u),l=+l,s=+s,i=+i),{chromosome1:t,position1:l,variant1:n,chromosome2:o,position2:s,variant2:u,correlation:i}}}};LzParsers=r.default})();
//# sourceMappingURL=lz-parsers.min.js.map