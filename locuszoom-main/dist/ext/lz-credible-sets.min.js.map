{"version":3,"sources":["webpack://[name]/../../../../../webpack/universalModuleDefinition","webpack://[name]/../../../../../webpack/bootstrap 069b89435249357eaca3","webpack://[name]/../../../../../src/app/stats.js","webpack://[name]/../../../../../src/app/gwas-credible-sets.js","webpack://[name]/../../../../../src/app/scoring.js","webpack://[name]/../../../../../src/app/marking.js","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/runtime/compat get default export","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand","webpack://[name]/./esm/ext/lz-credible-sets.js"],"names":["factory","module","Object","prototype","hasOwnProperty","call","object","property","ninv","p","a","b","c","d","e","f","q","r","x","Math","abs","sqrt","log","rollup","scoring","stats","marking","_nlogp_to_z2","nlogp","pow","bayesFactors","nlogpvals","cap","Array","isArray","length","z2_2","map","item","capValue","max","exp","normalizeProbabilities","scores","sumValues","reduce","findCredibleSet","probs","cutoff","Number","isNaN","statsTotal","sortedStatsMap","index","sort","runningTotal","result","fill","i","value","score","markBoolean","credibleSetMembers","rescaleCredibleSet","sumMarkers","exports","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","definition","key","o","defineProperty","enumerable","get","obj","prop","install","LocusZoom","BaseUMAdapter","Adapters","add","config","super","arguments","this","_config","assign","threshold","significance_threshold","_prefix_namespace","state","credible_set_threshold","chr","start","end","join","options","assoc_data","base","_buildRequestOptions","_assoc_data","Promise","resolve","assoc_logp_name","_findPrefixedKey","some","val","posteriorProbabilities","credibleSet","credSetScaled","credSetBool","_provider_name","console","error","association_credible_set_tooltip","l","Layouts","html","closable","show","or","hide","and","association_credible_set_layer","id","namespace","data_operations","type","from","name","requires","params","fill_opacity","tooltip","match","send","receive","color","unshift","field","scale_function","parameters","field_value","then","annotation_credible_set_layer","id_field","x_axis","filters","operator","behaviors","onmouseover","action","status","onmouseout","onclick","exclusive","onshiftclick","tooltip_positioning","annotation_credible_set","title","text","style","min_height","height","margin","top","right","bottom","left","inner_border","toolbar","axes","extent","render","interaction","drag_background_to_pan","scroll_to_zoom","x_linked","data_layers","association_credible_set_panel","widgets","push","position","button_html","button_title","layer_name","default_config_display_name","display_name","display","point_shape","point_size","else","legend","shape","size","label","class","breaks","values","association_credible_set_plot","width","responsive_resize","min_region_scale","max_region_scale","panels","use"],"mappings":"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","file":"ext/lz-credible-sets.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gwasCredibleSets\"] = factory();\n\telse\n\t\troot[\"gwasCredibleSets\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 069b89435249357eaca3","/** \n * @module stats \n * @license MIT\n * */\n\n/**\n * The inverse of the standard normal CDF. May be used to determine the Z-score for the desired quantile.\n *\n * This is an implementation of algorithm AS241:\n *     https://www.jstor.org/stable/2347330\n * \n * @param {number} p The desired quantile of the standard normal distribution.\n * @returns {number}\n */\nfunction ninv(p) {\n    const SPLIT1 = 0.425;\n    const SPLIT2 = 5.0;\n    const CONST1 = 0.180625;\n    const CONST2 = 1.6;\n    const a = [\n        3.3871328727963666080E0,\n        1.3314166789178437745E2,\n        1.9715909503065514427E3,\n        1.3731693765509461125E4,\n        4.5921953931549871457E4,\n        6.7265770927008700853E4,\n        3.3430575583588128105E4,\n        2.5090809287301226727E3\n    ];\n\n    const b = [\n        4.2313330701600911252E1,\n        6.8718700749205790830E2,\n        5.3941960214247511077E3,\n        2.1213794301586595867E4,\n        3.9307895800092710610E4,\n        2.8729085735721942674E4,\n        5.2264952788528545610E3\n    ];\n\n    const c = [\n        1.42343711074968357734E0,\n        4.63033784615654529590E0,\n        5.76949722146069140550E0,\n        3.64784832476320460504E0,\n        1.27045825245236838258E0,\n        2.41780725177450611770E-1,\n        2.27238449892691845833E-2,\n        7.74545014278341407640E-4\n    ];\n\n    const d = [\n        2.05319162663775882187E0,\n        1.67638483018380384940E0,\n        6.89767334985100004550E-1,\n        1.48103976427480074590E-1,\n        1.51986665636164571966E-2,\n        5.47593808499534494600E-4,\n        1.05075007164441684324E-9\n    ];\n\n    const e = [\n        6.65790464350110377720E0,\n        5.46378491116411436990E0,\n        1.78482653991729133580E0,\n        2.96560571828504891230E-1,\n        2.65321895265761230930E-2,\n        1.24266094738807843860E-3,\n        2.71155556874348757815E-5,\n        2.01033439929228813265E-7\n    ];\n\n    const f = [\n        5.99832206555887937690E-1,\n        1.36929880922735805310E-1,\n        1.48753612908506148525E-2,\n        7.86869131145613259100E-4,\n        1.84631831751005468180E-5,\n        1.42151175831644588870E-7,\n        2.04426310338993978564E-15\n    ];\n\n    const q = p - 0.5;\n    let r, x;\n\n    if (Math.abs(q) < SPLIT1) {\n        r = CONST1 - q * q;\n        return q * ((((((( a[7] * r + a[6] ) * r + a[5] ) * r + a[4] ) * r\n            + a[3] ) * r + a[2] ) * r + a[1] ) * r + a[0] ) /\n            ((((((( b[6] * r + b[5] ) * r + b[4] ) * r + b[3] ) * r\n                + b[2] ) * r + b[1] ) * r + b[0] ) * r + 1.0 );\n    }\n    else {\n        if (q < 0) {\n            r = p\n        }\n        else {\n            r = 1.0 - p\n        }\n\n        if (r > 0) {\n            r = Math.sqrt(-Math.log(r));\n            if (r <= SPLIT2) {\n                r -= CONST2;\n                x = ((((((( c[7] * r + c[6] ) * r + c[5] ) * r + c[4] ) * r\n                    + c[3] ) * r + c[2] ) * r + c[1] ) * r + c[0] ) /\n                    ((((((( d[6] * r + d[5] ) * r + d[4] ) * r + d[3] ) * r\n                        + d[2] ) * r + d[1] ) * r + d[0] ) * r + 1.0 );\n            }\n            else {\n                r -= SPLIT2;\n                x = ((((((( e[7] * r + e[6] ) * r + e[5] ) * r + e[4] ) * r\n                    + e[3] ) * r + e[2] ) * r + e[1] ) * r + e[0] ) /\n                    ((((((( f[6] * r + f[5] ) * r + f[4] ) * r + f[3] ) * r\n                        + f[2] ) * r + f[1] ) * r + f[0] ) * r + 1.0 );\n            }\n        }\n        else {\n            throw('Not implemented')\n        }\n\n        if (q < 0) {\n            x = -x\n        }\n\n        return x;\n    }\n}\n\n// Hack: A single global object representing the contents of the module\nconst rollup = { ninv };\n\nexport { ninv };\nexport default rollup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/stats.js","/** \n * Functions for calculating credible sets and Bayes factors from\n * genome-wide association study (GWAS) results. \n * @module gwas-credible-sets \n * @license MIT\n */\n\nimport stats from './stats';\nimport scoring from './scoring';\nimport marking from './marking';\n\n// HACK: Because a primary audience is targets that do not have any module system, we will expose submodules from the\n//  top-level module. (by representing each sub-module as a \"rollup object\" that exposes its internal methods)\n// Then, submodules may be accessed as `window.gwasCredibleSets.stats`, etc\n\n// If you are using a real module system, please import from sub-modules directly- these global helpers are a bit of\n//  a hack and may go away in the future\nexport { scoring, stats, marking };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gwas-credible-sets.js","/** \n * @module scoring \n * @license MIT\n */\n\nimport { ninv } from './stats';\n\n\n/**\n * Convert a -log10 p-value to Z^2.\n *\n * Very large -log10 p-values (very small p-values) cannot be converted to a Z-statistic directly in the browser due to\n *  limitations in javascript (64-bit floats.) These values are handled using an approximation:\n *  for small p-values, Z_i^2 has a linear relationship with -log10 p-value.\n *\n *  The approximation begins for -log10 p-values >= 300.\n *\n * @param nlogp\n * @return {number}\n * @private\n */\nfunction _nlogp_to_z2(nlogp) {\n    const p = Math.pow(10, -nlogp);\n    if (nlogp < 300) {\n        // Use exact method when within the range of 64-bit floats (approx 10^-323)\n        return Math.pow(ninv(p / 2), 2);\n    }\n    else {\n        // For very small p-values, -log10(pval) and Z^2 have a linear relationship\n        // This avoids issues with needing higher precision floats when doing the calculation\n        // with ninv\n        return (4.59884133027944 * nlogp) - 5.88085867031722\n    }\n}\n\n/**\n * Calculate a Bayes factor exp(Z^2 / 2) based on p-values. If the Z-score is very large, the Bayes factors\n *  are calculated in an inexact (capped) manner that makes the calculation tractable but preserves comparisons.\n * @param {Number[]} nlogpvals An array of -log10(p-value) entries\n * @param {Boolean} [cap=true] Whether to apply an inexact method. If false, some values in the return array may\n *  be represented as \"Infinity\", but the Bayes factors will be directly calculated wherever possible.\n * @return {Number[]} An array of exp(Z^2 / 2) statistics\n */\nfunction bayesFactors(nlogpvals, cap=true) {\n    if (!Array.isArray(nlogpvals) || ! nlogpvals.length) {\n        throw 'Must provide a non-empty array of pvalues';\n    }\n\n    // 1. Convert the pvalues to Z^2 / 2 values. Divide by 2 before applying the cap, because it means fewer values will\n    //   need to be truncated. This does affect some of the raw bayes factors that are returned (when a cap is needed),\n    //   but the resulting credible set contents / posterior probabilities are unchanged.\n    let z2_2 = nlogpvals.map(item => _nlogp_to_z2(item) / 2);\n\n    // 2. Calculate bayes factor, using a truncation approach that prevents overrunning the max float64 value\n    //   (when Z^2 / 2 > 709 or so). As safeguard, we could (but currently don't) check that exp(Z^2 / 2) is not larger\n    //   than infinity.\n    if (cap) {\n        const capValue = Math.max(...z2_2) - 708; // The real cap is ~709; this should prevent any value from exceeding it\n        if (capValue > 0) {\n            z2_2 = z2_2.map(item => (item - capValue));\n        }\n    }\n    return z2_2.map(item => Math.exp(item));\n}\n\n/**\n * Normalize so that sum of all elements = 1.0. This method must be applied to bayes factors before calculating any\n *  credible set.\n *\n * @param {Number[]} scores An array of probability scores for all elements in the range\n * @returns {Number[]} Posterior probabilities\n */\nfunction normalizeProbabilities(scores) {\n    const sumValues = scores.reduce((a, b) => a + b, 0);\n    return scores.map(item => item / sumValues);\n}\n\nconst rollup = { bayesFactors, normalizeProbabilities };\nexport default rollup;\nexport { bayesFactors, normalizeProbabilities };\n\n// Export additional symbols for unit testing only (not part of public interface for the module)\nexport { _nlogp_to_z2 };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scoring.js","/**\n * @module marking\n * @license MIT\n */\n\n/**\n * Given an array of probabilities, determine which elements of the array fall within the X% credible set,\n *   where X is the cutoff value.\n *\n * @param {Number[]} probs Calculated probabilities used to rank the credible set. This method will normalize the\n *   provided input to ensure that the values sum to 1.0.\n * @param {Number} [cutoff=0.95] Keep taking items until we have accounted for >= this fraction of the total probability.\n *  For example, 0.95 would represent the 95% credible set.\n * @return {Number[]} An array with posterior probabilities (for the items in the credible set), and zero for all\n *   other elements. This array is the same length as the provided probabilities array.\n */\nfunction findCredibleSet(probs, cutoff=0.95) {\n    // Type checking\n    if (!Array.isArray(probs) || !probs.length) {\n        throw 'Probs must be a non-empty array';\n    }\n    if (!(typeof cutoff === 'number' ) || cutoff < 0 || cutoff > 1.0 || Number.isNaN(cutoff)) {\n        throw 'Cutoff must be a number between 0 and 1';\n    }\n\n    const statsTotal = probs.reduce((a, b) => a + b, 0);\n    if (statsTotal <= 0) {\n        throw 'Sum of provided probabilities must be > 0';\n    }\n\n    // Sort the probabilities by largest first, while preserving a map to original item order\n    const sortedStatsMap = probs\n        .map((item, index) => [item, index])\n        .sort((a, b) => (b[0] - a[0]));\n\n    let runningTotal = 0;\n    const result = new Array(sortedStatsMap.length).fill(0);\n    for (let i = 0; i < sortedStatsMap.length; i++) {\n        let [value, index] = sortedStatsMap[i];\n        if (runningTotal < cutoff) {\n            // Convert from a raw score to posterior probability by dividing the item under consideration\n            //  by sum of all probabilities.\n            const score = value / statsTotal;\n            result[index] = score;\n            runningTotal += score;\n        } else {\n            break;\n        }\n    }\n    return result;\n}\n\n/**\n * Given a numeric [pre-calculated credible set]{@link #findCredibleSet}, return an array of booleans where true\n *   denotes membership in the credible set.\n *\n * This is a helper method used when visualizing the members of the credible set by raw membership.\n *\n * @param {Number[]} credibleSetMembers An array indicating contributions to the credible set, where non-members are\n *  represented by some falsy value.\n * @return {Boolean[]} An array of booleans identifying whether or not each item is in the credible set.\n *  This array is the same length as the provided credible set array.\n */\nfunction markBoolean(credibleSetMembers) {\n    return credibleSetMembers.map(item => !!item);\n}\n\n/**\n * Visualization helper method for rescaling data to a predictable output range, eg when range for a color gradient\n *   must be specified in advance.\n *\n * Given an array of probabilities for items in a credible set, rescale the probabilities within only the credible\n *   set to their total sum.\n *\n * Example for 95% credible set: [0.92, 0.06, 0.02] -> [0.938, 0.061, 0]. The first two elements here\n * belong to the credible set, the last element does not.\n *\n * @param {Number[]} credibleSetMembers Calculated probabilities used to rank the credible set.\n * @return {Number[]} The fraction of credible set probabilities each item accounts for.\n *  This array is the same length as the provided credible set.\n */\nfunction rescaleCredibleSet(credibleSetMembers) {\n    const sumMarkers = credibleSetMembers.reduce((a, b) => a + b, 0);\n    return credibleSetMembers.map(item => item / sumMarkers);\n}\n\nconst rollup = { findCredibleSet, markBoolean, rescaleCredibleSet };\nexport default rollup;\nexport { findCredibleSet, markBoolean, rescaleCredibleSet };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/marking.js","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Custom code used to power credible sets demonstration example. This is not part of the core LocusZoom library,\n * but can be included as a standalone file.\n *\n * ### Features provided\n * * {@link module:LocusZoom_Adapters~CredibleSetLZ}\n * * {@link module:LocusZoom_Layouts~association_credible_set_tooltip}\n * * {@link module:LocusZoom_Layouts~annotation_credible_set_tooltip}\n * * {@link module:LocusZoom_Layouts~association_credible_set}\n * * {@link module:LocusZoom_Layouts~annotation_credible_set_layer}\n * * {@link module:LocusZoom_Layouts~annotation_credible_set}\n * * {@link module:LocusZoom_Layouts~association_credible_set}\n * * {@link module:LocusZoom_Layouts~association_credible_set_plot}\n *\n * ### Loading and usage\n * The page must incorporate and load all libraries before this file can be used, including:\n *  - LocusZoom\n *\n * To use in an environment without special JS build tooling, simply load the extension file as JS from a CDN (after any dependencies):\n * ```\n * <script src=\"https://cdn.jsdelivr.net/npm/locuszoom@INSERT_VERSION_HERE/dist/ext/lz-credible-sets.min.js\" type=\"application/javascript\"></script>\n * ```\n *\n * To use with ES6 modules, the plugin must be loaded and registered explicitly before use:\n * ```\n * import LocusZoom from 'locuszoom';\n * import credibleSets from 'locuszoom/esm/ext/lz-credible-sets';\n * LocusZoom.use(credibleSets);\n * ```\n @module\n*/\n\nimport {marking, scoring} from 'gwas-credible-sets';\n\nfunction install (LocusZoom) {\n    const BaseUMAdapter = LocusZoom.Adapters.get('BaseUMAdapter');\n\n    /**\n     * (**extension**) Custom data adapter that calculates the 95% credible set based on provided association data.\n     * This source must be requested as the second step in a chain, after a previous step that returns fields required\n     *  for the calculation. (usually, it follows a request for GWAS summary statistics)\n     * @alias module:LocusZoom_Adapters~CredibleSetLZ\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    class CredibleSetLZ extends BaseUMAdapter {\n        /**\n         * @param {Number} [config.params.threshold=0.95] The credible set threshold (eg 95%). Will continue selecting SNPs\n         *  until the posterior probabilities add up to at least this fraction of the total.\n         * @param {Number} [config.params.significance_threshold=7.301] Do not perform a credible set calculation for this\n         *  region unless AT LEAST ONE SNP (as -log10p) exceeds the line of GWAS signficance. Otherwise we are declaring a\n         *  credible set when there is no evidence of anything being significant at all. If one snp is significant, it will\n         *  create a credible set for the entire region; the resulting set may include things below the line of significance.\n         */\n        constructor(config) {\n            super(...arguments);\n            // Set defaults. Default sig threshold is the line of GWAS significance. (as -log10p)\n            this._config = Object.assign(\n                { threshold: 0.95, significance_threshold: 7.301 },\n                this._config,\n            );\n            this._prefix_namespace = false;\n        }\n\n        _getCacheKey (state) {\n            const threshold = state.credible_set_threshold || this._config.threshold;\n            return [threshold, state.chr, state.start, state.end].join('_');\n        }\n\n        _buildRequestOptions(options, assoc_data) {\n            const base = super._buildRequestOptions(...arguments);\n            base._assoc_data = assoc_data;\n            return base;\n        }\n\n        _performRequest(options) {\n            const {_assoc_data} = options;\n            if (!_assoc_data.length) {\n                // No credible set can be calculated because there is no association data for this region\n                return Promise.resolve([]);\n            }\n\n            const assoc_logp_name = this._findPrefixedKey(_assoc_data[0], 'log_pvalue');\n\n            const threshold = this._config.threshold;\n\n            // Calculate raw bayes factors and posterior probabilities based on information returned from the API\n            const nlogpvals = _assoc_data.map((item) => item[assoc_logp_name]);\n\n            if (!nlogpvals.some((val) => val >= this._config.significance_threshold)) {\n                // If NO points have evidence of significance, define the credible set to be empty\n                //  (rather than make a credible set that we don't think is meaningful)\n                return Promise.resolve(_assoc_data);\n            }\n\n            try {\n                const scores = scoring.bayesFactors(nlogpvals);\n                const posteriorProbabilities = scoring.normalizeProbabilities(scores);\n\n                // Use scores to mark the credible set in various ways (depending on your visualization preferences,\n                //   some of these may not be needed)\n                const credibleSet = marking.findCredibleSet(posteriorProbabilities, threshold);\n                const credSetScaled = marking.rescaleCredibleSet(credibleSet);\n                const credSetBool = marking.markBoolean(credibleSet);\n\n                // Annotate each response record based on credible set membership. This has the effect of joining\n                //   credset results to assoc data directly within the adapter (no separate join needed)\n                for (let i = 0; i < _assoc_data.length; i++) {\n                    _assoc_data[i][`${options._provider_name}:posterior_prob`] = posteriorProbabilities[i];\n                    _assoc_data[i][`${options._provider_name}:contrib_fraction`] = credSetScaled[i];\n                    _assoc_data[i][`${options._provider_name}:is_member`] = credSetBool[i];\n                }\n            } catch (e) {\n                // If the calculation cannot be completed, return the data without annotation fields\n                console.error(e);\n            }\n            return Promise.resolve(_assoc_data);\n        }\n    }\n\n    LocusZoom.Adapters.add('CredibleSetLZ', CredibleSetLZ);\n\n    // Add related layouts to the central global registry\n    /**\n     * (**extension**) Tooltip layout that appends credible set posterior probability to the default association tooltip (for SNPs in the credible set)\n     * @alias module:LocusZoom_Layouts~association_credible_set_tooltip\n     * @type tooltip\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    const association_credible_set_tooltip = function () {\n        // Extend a known tooltip with an extra row of info showing posterior probabilities\n        const l = LocusZoom.Layouts.get('tooltip', 'standard_association');\n        l.html += '{{#if credset:posterior_prob}}<br>Posterior probability: <strong>{{credset:posterior_prob|scinotation|htmlescape}}</strong>{{/if}}';\n        return l;\n    }();\n\n    LocusZoom.Layouts.add('tooltip', 'association_credible_set', association_credible_set_tooltip);\n\n    /**\n     * (**extension**) A tooltip layout for annotation (rug) tracks that provides information about credible set members\n     * @alias module:LocusZoom_Layouts~annotation_credible_set_tooltip\n     * @type tooltip\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    const annotation_credible_set_tooltip = {\n        closable: true,\n        show: { or: ['highlighted', 'selected'] },\n        hide: { and: ['unhighlighted', 'unselected'] },\n        html: '<strong>{{assoc:variant|htmlescape}}</strong><br>'\n            + 'P Value: <strong>{{assoc:log_pvalue|logtoscinotation|htmlescape}}</strong><br>' +\n            '{{#if credset:posterior_prob}}<br>Posterior probability: <strong>{{credset:posterior_prob|scinotation|htmlescape}}</strong>{{/if}}',\n    };\n    LocusZoom.Layouts.add('tooltip', 'annotation_credible_set', annotation_credible_set_tooltip);\n\n    /**\n     * (**extension**) A data layer layout that shows GWAS summary statistics overlaid with credible set membership information\n     * @alias module:LocusZoom_Layouts~association_credible_set_layer\n     * @type data_layer\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n\n    const association_credible_set_layer = function () {\n        const base = LocusZoom.Layouts.get('data_layer', 'association_pvalues', {\n            id: 'associationcredibleset',\n            namespace: { 'assoc': 'assoc', 'credset': 'credset', 'ld': 'ld' },\n            data_operations: [\n                {\n                    type: 'fetch',\n                    from: ['assoc', 'ld(assoc)', 'credset(assoc)'],\n                },\n                {\n                    type: 'left_match',\n                    name: 'credset_plus_ld',\n                    requires: ['credset', 'ld'],  // The credible sets demo wasn't fully moved over to the new data operations system, and as such it is a bit weird\n                    params: ['assoc:position', 'ld:position2'],  // FIXME: old LZ used position, because it was less sensitive to format. We'd like to match assoc:variant = ld:variant2, but not every assoc source provides variant data in the way we need. This would need to be fixed via special formatting adjustment later.\n                },\n            ],\n            fill_opacity: 0.7,\n            tooltip: LocusZoom.Layouts.get('tooltip', 'association_credible_set'),\n            match: { send: 'assoc:variant', receive: 'assoc:variant' },\n        });\n        base.color.unshift({\n            field: 'lz_is_match',  // Special field name whose presence triggers custom rendering\n            scale_function: 'if',\n            parameters: {\n                field_value: true,\n                then: '#FFf000',\n            },\n        });\n        return base;\n    }();\n    LocusZoom.Layouts.add('data_layer', 'association_credible_set', association_credible_set_layer);\n\n    /**\n     * (**extension**) A data layer layout that shows a vertical mark whenever a SNP is a member of the credible set\n     * @alias module:LocusZoom_Layouts~annotation_credible_set_layer\n     * @type data_layer\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    const annotation_credible_set_layer = {\n        namespace: { 'assoc': 'assoc', 'credset': 'credset' },\n        data_operations: [{\n            type: 'fetch',\n            from: ['assoc', 'credset(assoc)'],\n        }],\n        id: 'annotationcredibleset',\n        type: 'annotation_track',\n        id_field: 'assoc:variant',\n        x_axis: {\n            field: 'assoc:position',\n        },\n        color: [\n            {\n                field: 'lz_is_match',  // Special field name whose presence triggers custom rendering\n                scale_function: 'if',\n                parameters: {\n                    field_value: true,\n                    then: '#001cee',\n                },\n            },\n            '#00CC00',\n        ],\n        match: { send: 'assoc:variant', receive: 'assoc:variant' },\n        filters: [\n            // Specify which points to show on the track. Any selection must satisfy ALL filters\n            { field: 'credset:is_member', operator: '=', value: true },\n        ],\n        behaviors: {\n            onmouseover: [\n                { action: 'set', status: 'highlighted' },\n            ],\n            onmouseout: [\n                { action: 'unset', status: 'highlighted' },\n            ],\n            onclick: [\n                { action: 'toggle', status: 'selected', exclusive: true },\n            ],\n            onshiftclick: [\n                { action: 'toggle', status: 'selected' },\n            ],\n        },\n        tooltip: LocusZoom.Layouts.get('tooltip', 'annotation_credible_set'),\n        tooltip_positioning: 'top',\n    };\n    LocusZoom.Layouts.add('data_layer', 'annotation_credible_set', annotation_credible_set_layer);\n\n    /**\n     * (**extension**) A panel layout that shows a vertical mark whenever a SNP is a member of the credible set\n     * @alias module:LocusZoom_Layouts~annotation_credible_set\n     * @type panel\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    const annotation_credible_set = {\n        id: 'annotationcredibleset',\n        title: { text: 'SNPs in 95% credible set', x: 50, style: { 'font-size': '14px' } },\n        min_height: 50,\n        height: 50,\n        margin: { top: 25, right: 50, bottom: 10, left: 70 },\n        inner_border: 'rgb(210, 210, 210)',\n        toolbar: LocusZoom.Layouts.get('toolbar', 'standard_panel'),\n        axes: {\n            x: { extent: 'state', render: false },\n        },\n        interaction: {\n            drag_background_to_pan: true,\n            scroll_to_zoom: true,\n            x_linked: true,\n        },\n        data_layers: [\n            LocusZoom.Layouts.get('data_layer', 'annotation_credible_set'),\n        ],\n    };\n    LocusZoom.Layouts.add('panel', 'annotation_credible_set', annotation_credible_set);\n\n    /**\n     * (**extension**) A panel layout that shows GWAS summary statistics in a standard LocusZoom view, overlaid with credible set membership information\n     * @alias module:LocusZoom_Layouts~association_credible_set\n     * @type panel\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    const association_credible_set_panel = function () {\n        const l = LocusZoom.Layouts.get('panel', 'association', {\n            id: 'associationcrediblesets',\n            data_layers: [\n                LocusZoom.Layouts.get('data_layer', 'significance'),\n                LocusZoom.Layouts.get('data_layer', 'recomb_rate'),\n                LocusZoom.Layouts.get('data_layer', 'association_credible_set'),\n            ],\n        });\n        // Add \"display options\" button to control how credible set coloring is overlaid on the standard association plot\n        l.toolbar.widgets.push(\n            {\n                type: 'display_options',\n                position: 'right',\n                color: 'blue',\n                // Below: special config specific to this widget\n                button_html: 'Display options...',\n                button_title: 'Control how plot items are displayed',\n                layer_name: 'associationcredibleset',\n                default_config_display_name: 'Linkage Disequilibrium (default)', // display name for the default plot color option (allow user to revert to plot defaults)\n\n                options: [\n                    {\n                        // First dropdown menu item\n                        display_name: '95% credible set (boolean)',  // Human readable representation of field name\n                        display: {  // Specify layout directives that control display of the plot for this option\n                            point_shape: 'circle',\n                            point_size: 40,\n                            color: {\n                                field: 'credset:is_member',\n                                scale_function: 'if',\n                                parameters: {\n                                    field_value: true,\n                                    then: '#00CC00',\n                                    else: '#CCCCCC',\n                                },\n                            },\n                            legend: [ // Tells the legend how to represent this display option\n                                {\n                                    shape: 'circle',\n                                    color: '#00CC00',\n                                    size: 40,\n                                    label: 'In credible set',\n                                    class: 'lz-data_layer-scatter',\n                                },\n                                {\n                                    shape: 'circle',\n                                    color: '#CCCCCC',\n                                    size: 40,\n                                    label: 'Not in credible set',\n                                    class: 'lz-data_layer-scatter',\n                                },\n                            ],\n                        },\n                    },\n                    {\n                        // Second option. The same plot- or even the same field- can be colored in more than one way.\n                        display_name: '95% credible set (gradient by contribution)',\n                        display: {\n                            point_shape: 'circle',\n                            point_size: 40,\n                            color: [\n                                {\n                                    field: 'credset:contrib_fraction',\n                                    scale_function: 'if',\n                                    parameters: {\n                                        field_value: 0,\n                                        then: '#777777',\n                                    },\n                                },\n                                {\n                                    scale_function: 'interpolate',\n                                    field: 'credset:contrib_fraction',\n                                    parameters: {\n                                        breaks: [0, 1],\n                                        values: ['#fafe87', '#9c0000'],\n                                    },\n                                },\n                            ],\n                            legend: [\n                                {\n                                    shape: 'circle',\n                                    color: '#777777',\n                                    size: 40,\n                                    label: 'No contribution',\n                                    class: 'lz-data_layer-scatter',\n                                },\n                                {\n                                    shape: 'circle',\n                                    color: '#fafe87',\n                                    size: 40,\n                                    label: 'Some contribution',\n                                    class: 'lz-data_layer-scatter',\n                                },\n                                {\n                                    shape: 'circle',\n                                    color: '#9c0000',\n                                    size: 40,\n                                    label: 'Most contribution',\n                                    class: 'lz-data_layer-scatter',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        );\n        return l;\n    }();\n    LocusZoom.Layouts.add('panel', 'association_credible_set', association_credible_set_panel);\n\n    /**\n     * (**extension**) A standard LocusZoom plot layout, with additional credible set information.\n     * @alias module:LocusZoom_Layouts~association_credible_set_plot\n     * @type plot\n     * @see {@link module:ext/lz-credible-sets} for required extension and installation instructions\n     */\n    const association_credible_set_plot = {\n        state: {},\n        width: 800,\n        height: 450,\n        responsive_resize: true,\n        min_region_scale: 20000,\n        max_region_scale: 1000000,\n        toolbar: LocusZoom.Layouts.get('toolbar', 'standard_association'),\n        panels: [\n            LocusZoom.Layouts.get('panel', 'association_credible_set'),\n            LocusZoom.Layouts.get('panel', 'annotation_credible_set'),\n            LocusZoom.Layouts.get('panel', 'genes'),\n        ],\n    };\n    LocusZoom.Layouts.add('plot', 'association_credible_set', association_credible_set_plot);\n}\n\n\nif (typeof LocusZoom !== 'undefined') {\n    // Auto-register the plugin when included as a script tag. ES6 module users must register via LocusZoom.use()\n    // eslint-disable-next-line no-undef\n    LocusZoom.use(install);\n}\n\n\nexport default install;\n"],"sourceRoot":""}