/*! Locuszoom 0.14.0 */
var LzIntervalsTrack;(()=>{"use strict";var t={d:(e,a)=>{for(var r in a)t.o(a,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{default:()=>o});const a=d3,r=Symbol.for("lzXCS"),s=Symbol.for("lzYCS"),i=Symbol.for("lzXCE"),l=Symbol.for("lzYCE");function n(t){const e=t.Adapters.get("BaseUMAdapter"),n=t.Widgets.get("_Button"),o=t.Widgets.get("BaseWidget");function c(t,e){return e?`rgb(${e})`:null}const d={start_field:"start",end_field:"end",track_label_field:"state_name",track_split_field:"state_id",track_split_order:"DESC",track_split_legend_to_y_axis:2,split_tracks:!0,track_height:15,track_vertical_spacing:3,bounding_box_padding:2,always_hide_legend:!1,color:"#B8B8B8",fill_opacity:1,tooltip_positioning:"vertical"},g=t.DataLayers.get("BaseDataLayer");const _={closable:!1,show:{or:["highlighted","selected"]},hide:{and:["unhighlighted","unselected"]},html:"{{intervals:state_name|htmlescape}}<br>{{intervals:start|htmlescape}}-{{intervals:end|htmlescape}}"},h={namespace:{intervals:"intervals"},id:"intervals",type:"intervals",tag:"intervals",id_field:"{{intervals:start}}_{{intervals:end}}_{{intervals:state_name}}",start_field:"intervals:start",end_field:"intervals:end",track_split_field:"intervals:state_name",track_label_field:"intervals:state_name",split_tracks:!1,always_hide_legend:!0,color:[{field:"intervals:itemRgb",scale_function:"to_rgb"},{field:"intervals:state_name",scale_function:"categorical_bin",parameters:{categories:[],values:[],null_value:"#B8B8B8"}}],legend:[],behaviors:{onmouseover:[{action:"set",status:"highlighted"}],onmouseout:[{action:"unset",status:"highlighted"}],onclick:[{action:"toggle",status:"selected",exclusive:!0}],onshiftclick:[{action:"toggle",status:"selected"}]},tooltip:_},u=t.Layouts.merge({id_field:"{{intervals:chromStart}}_{{intervals:chromEnd}}_{{intervals:name}}",start_field:"intervals:chromStart",end_field:"intervals:chromEnd",track_split_field:"intervals:name",track_label_field:"intervals:name",split_tracks:!0,always_hide_legend:!1,color:[{field:"intervals:itemRgb",scale_function:"to_rgb"},{field:"intervals:name",scale_function:"categorical_bin",parameters:{categories:[],values:[],null_value:"#B8B8B8"}}],tooltip:t.Layouts.merge({html:"<strong>Group: </strong>{{intervals:name|htmlescape}}<br>\n<strong>Region: </strong>{{intervals:chromStart|htmlescape}}-{{intervals:chromEnd|htmlescape}}\n{{#if intervals:score}}<br>\n<strong>Score:</strong> {{intervals:score|htmlescape}}{{/if}}"},_)},h),p={id:"intervals",tag:"intervals",min_height:50,height:50,margin:{top:25,right:150,bottom:5,left:70},toolbar:function(){const e=t.Layouts.get("toolbar","standard_panel");return e.widgets.push({type:"toggle_split_tracks",data_layer_id:"intervals",position:"right"}),e}(),axes:{},interaction:{drag_background_to_pan:!0,scroll_to_zoom:!0,x_linked:!0},legend:{hidden:!0,orientation:"horizontal",origin:{x:50,y:0},pad_from_bottom:5},data_layers:[h]},y=t.Layouts.merge({min_height:120,height:120,data_layers:[u]},p),b={state:{},width:800,responsive_resize:!0,min_region_scale:2e4,max_region_scale:1e6,toolbar:t.Layouts.get("toolbar","standard_association"),panels:[t.Layouts.get("panel","association"),t.Layouts.merge({min_height:120,height:120},p),t.Layouts.get("panel","genes")]};t.Adapters.add("IntervalLZ",class extends e{_getURL(t){const e=`?filter=id in ${this._config.source} and chromosome eq '${t.chr}' and start le ${t.end} and end ge ${t.start}`;return`${super._getURL(t)}${e}`}}),t.DataLayers.add("intervals",class extends g{constructor(e){t.Layouts.merge(e,d),super(...arguments),this._previous_categories=[],this._categories=[]}initialize(){super.initialize(),this._statusnodes_group=this.svg.group.append("g").attr("class","lz-data-layer-intervals lz-data-layer-intervals-statusnode"),this._datanodes_group=this.svg.group.append("g").attr("class","lz-data_layer-intervals")}_arrangeTrackSplit(t){const{track_split_field:e}=this.layout,a={};return t.forEach((t=>{const r=t[e];Object.prototype.hasOwnProperty.call(a,r)||(a[r]=[]),a[r].push(t)})),a}_arrangeTracksLinear(t,e=!0){if(e)return[t];const{start_field:a,end_field:r}=this.layout,s=[[]];return t.forEach(((t,e)=>{for(let e=0;e<s.length;e++){const i=s[e],l=i[i.length-1];if(!(l&&t[a]<l[r]&&l[a]<t[r]))return void i.push(t)}s.push([t])})),s}_assignTracks(t){const{x_scale:e}=this.parent,{start_field:a,end_field:n,bounding_box_padding:o,track_height:c}=this.layout,d=this.layout.split_tracks?this._arrangeTrackSplit(t):this._arrangeTracksLinear(t,!0),g=Object.keys(d);return"DESC"===this.layout.track_split_order&&g.reverse(),g.forEach(((t,g)=>{d[t].forEach((t=>{t[r]=e(t[a]),t[i]=e(t[n]),t[s]=g*this.getTrackHeight()+o,t[l]=t[s]+c,t.track=g}))})),[g,Object.values(d).reduce(((t,e)=>t.concat(e)),[])]}getElementStatusNodeId(t){if(this.layout.split_tracks){const e="object"==typeof t?t.track:t;return`${this.getBaseId()}-statusnode-${e}`.replace(/[^\w]/g,"_")}return null}getTrackHeight(){return this.layout.track_height+this.layout.track_vertical_spacing+2*this.layout.bounding_box_padding}_applyLayoutOptions(){const t=this,e=this._base_layout,a=this.layout,r=e.color.find((function(t){return t.scale_function&&"categorical_bin"===t.scale_function})),s=a.color.find((function(t){return t.scale_function&&"categorical_bin"===t.scale_function}));if(!r)throw new Error("Interval tracks must define a `categorical_bin` color scale");const i=r.parameters.categories.length&&r.parameters.values.length,l=e.legend&&e.legend.length;if(!!i^!!l)throw new Error("To use a manually specified color scheme, both color and legend options must be set.");const n=e.color.find((function(t){return t.scale_function&&"to_rgb"===t.scale_function})),o=n&&n.field,c=this._generateCategoriesFromData(this.data,o);if(!i&&!l){const e=this._makeColorScheme(c);s.parameters.categories=c.map((function(t){return t[0]})),s.parameters.values=e,this.layout.legend=c.map((function(e,a){const r=e[0],i={shape:"rect",width:9,label:e[1],color:s.parameters.values[a]};return i[t.layout.track_split_field]=r,i}))}}render(){this._applyLayoutOptions(),this._previous_categories=this._categories;const[t,e]=this._assignTracks(this.data);this._categories=t;if(!t.every(((t,e)=>t===this._previous_categories[e])))return void this.updateSplitTrackAxis(t);const l=this._applyFilters(e);this._statusnodes_group.selectAll("rect").remove();const n=this._statusnodes_group.selectAll("rect").data(a.range(t.length));if(this.layout.split_tracks){const t=this.getTrackHeight();n.enter().append("rect").attr("class","lz-data_layer-intervals lz-data_layer-intervals-statusnode lz-data_layer-intervals-shared").attr("rx",this.layout.bounding_box_padding).attr("ry",this.layout.bounding_box_padding).merge(n).attr("id",(t=>this.getElementStatusNodeId(t))).attr("x",0).attr("y",(e=>e*t)).attr("width",this.parent.layout.cliparea.width).attr("height",Math.max(t-this.layout.track_vertical_spacing,1))}n.exit().remove();const o=this._datanodes_group.selectAll("rect").data(l,(t=>t[this.layout.id_field]));o.enter().append("rect").merge(o).attr("id",(t=>this.getElementId(t))).attr("x",(t=>t[r])).attr("y",(t=>t[s])).attr("width",(t=>Math.max(t[i]-t[r],1))).attr("height",this.layout.track_height).attr("fill",((t,e)=>this.resolveScalableParameter(this.layout.color,t,e))).attr("fill-opacity",((t,e)=>this.resolveScalableParameter(this.layout.fill_opacity,t,e))),o.exit().remove(),this._datanodes_group.call(this.applyBehaviors.bind(this)),this.parent&&this.parent.legend&&this.parent.legend.render()}_getTooltipPosition(t){return{x_min:t.data[r],x_max:t.data[i],y_min:t.data[s],y_max:t.data[l]}}updateSplitTrackAxis(t){const e=!!this.layout.track_split_legend_to_y_axis&&`y${this.layout.track_split_legend_to_y_axis}`;if(this.layout.split_tracks){const a=+t.length||0,r=+this.layout.track_height||0,s=2*(+this.layout.bounding_box_padding||0)+(+this.layout.track_vertical_spacing||0),i=a*r+(a-1)*s;this.parent.scaleHeightToData(i),e&&this.parent.legend&&(this.parent.legend.hide(),this.parent.layout.axes[e]={render:!0,ticks:[],range:{start:i-this.layout.track_height/2,end:this.layout.track_height/2}},this.layout.legend.forEach((r=>{const s=r[this.layout.track_split_field];let i=t.findIndex((t=>t===s));-1!==i&&("DESC"===this.layout.track_split_order&&(i=Math.abs(i-a-1)),this.parent.layout.axes[e].ticks.push({y:i-1,text:r.label}))})),this.layout.y_axis={axis:this.layout.track_split_legend_to_y_axis,floor:1,ceiling:a}),this.parent_plot.positionPanels()}else e&&this.parent.legend&&(this.layout.always_hide_legend||this.parent.legend.show(),this.parent.layout.axes[e]={render:!1},this.parent.render());return this}toggleSplitTracks(){return this.layout.split_tracks=!this.layout.split_tracks,this.parent.legend&&!this.layout.always_hide_legend&&(this.parent.layout.margin.bottom=5+(this.layout.split_tracks?0:this.parent.legend.layout.height+5)),this.render(),this}_makeColorScheme(t){if(t.find((t=>t[2])))return t.map((t=>c(0,t[2])));const e=t.length;return e<=15?["rgb(212,212,212)","rgb(192,192,192)","rgb(128,128,128)","rgb(189,183,107)","rgb(233,150,122)","rgb(205,92,92)","rgb(138,145,208)","rgb(102,205,170)","rgb(255,255,0)","rgb(194,225,5)","rgb(0,100,0)","rgb(0,128,0)","rgb(50,205,50)","rgb(255,69,0)","rgb(255,0,0)"]:e<=18?["rgb(212,212,212)","rgb(192,192,192)","rgb(128,128,128)","rgb(189,183,107)","rgb(205,92,92)","rgb(138,145,208)","rgb(102,205,170)","rgb(255,255,0)","rgb(255,195,77)","rgb(255,195,77)","rgb(194,225,5)","rgb(194,225,5)","rgb(0,100,0)","rgb(0,128,0)","rgb(255,69,0)","rgb(255,69,0)","rgb(255,69,0)","rgb(255,0,0)"]:["rgb(212,212,212)","rgb(128,128,128)","rgb(112,48,160)","rgb(230,184,183)","rgb(138,145,208)","rgb(102,205,170)","rgb(255,255,102)","rgb(255,255,0)","rgb(255,255,0)","rgb(255,255,0)","rgb(255,195,77)","rgb(255,195,77)","rgb(255,195,77)","rgb(194,225,5)","rgb(194,225,5)","rgb(194,225,5)","rgb(194,225,5)","rgb(0,150,0)","rgb(0,128,0)","rgb(0,128,0)","rgb(0,128,0)","rgb(255,69,0)","rgb(255,69,0)","rgb(255,69,0)","rgb(255,0,0)"]}_generateCategoriesFromData(t,e){const a=this,r=this._base_layout.legend;if(r&&r.length)return r.map((t=>[t[this.layout.track_split_field],t.label,t.color]));const s={},i=[];return t.forEach((t=>{const r=t[a.layout.track_split_field];Object.prototype.hasOwnProperty.call(s,r)||(s[r]=null,i.push([r,t[this.layout.track_label_field],t[e]]))})),i}}),t.Layouts.add("tooltip","standard_intervals",_),t.Layouts.add("data_layer","intervals",h),t.Layouts.add("data_layer","bed_intervals",u),t.Layouts.add("panel","intervals",p),t.Layouts.add("panel","bed_intervals",y),t.Layouts.add("plot","interval_association",b),t.ScaleFunctions.add("to_rgb",c),t.Widgets.add("toggle_split_tracks",class extends o{constructor(t){if(super(...arguments),t.data_layer_id||(t.data_layer_id="intervals"),!this.parent_panel.data_layers[t.data_layer_id])throw new Error("Toggle split tracks widget specifies an invalid data layer ID")}update(){const t=this.parent_panel.data_layers[this.layout.data_layer_id],e=t.layout.split_tracks?"Merge Tracks":"Split Tracks";return this.button?(this.button.setHtml(e),this.button.show(),this.parent.position(),this):(this.button=new n(this).setColor(this.layout.color).setHtml(e).setTitle("Toggle whether tracks are split apart or merged together").setOnclick((()=>{t.toggleSplitTracks(),this.scale_timeout&&clearTimeout(this.scale_timeout),this.scale_timeout=setTimeout((()=>{this.parent_panel.scaleHeightToData(),this.parent_plot.positionPanels()}),0),this.update()})),this.update())}})}"undefined"!=typeof LocusZoom&&LocusZoom.use(n);const o=n;LzIntervalsTrack=e.default})();
//# sourceMappingURL=lz-intervals-track.min.js.map